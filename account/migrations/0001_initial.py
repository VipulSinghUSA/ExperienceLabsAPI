# Generated by Django 4.0 on 2023-12-20 05:47

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ClientContact',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('rep_name', models.TextField(blank=True, null=True)),
                ('cell_no', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('designation', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('pincode', models.TextField(blank=True, null=True)),
                ('country', models.TextField(blank=True, null=True)),
                ('taxid', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'client_contact',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClientPkg',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('billing_type', models.TextField(blank=True, db_column='billing-type', null=True)),
                ('credits', models.BigIntegerField(blank=True, null=True)),
                ('balance', models.BigIntegerField(blank=True, null=True)),
                ('client_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'client_pkg',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'client',
            },
        ),
        migrations.CreateModel(
            name='ClientExplabs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('address_1', models.TextField(blank=True, null=True)),
                ('address_2', models.TextField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('country', models.TextField(blank=True, null=True)),
                ('zipcode', models.TextField(blank=True, null=True)),
                ('client_type', models.TextField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('imagex_client_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'client_explabs',
            },
        ),
        migrations.CreateModel(
            name='ClientLocation',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('loc_name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('imagex_location_id', models.CharField(blank=True, max_length=255, null=True)),
                ('imagex_client_id', models.CharField(blank=True, max_length=255, null=True)),
                ('imagex_api_key', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'client_location',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('pkg_name', models.TextField(blank=True, null=True)),
                ('cost_per_credits', models.TextField(blank=True, null=True)),
                ('minimum_credits', models.TextField(blank=True, null=True)),
                ('reorder_level', models.TextField(blank=True, db_column='reorder-level', null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_saas', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'subscription',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('api_key', models.CharField(blank=True, max_length=64, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='account.client')),
            ],
            options={
                'db_table': 'location',
            },
        ),
        migrations.CreateModel(
            name='UserloginExp',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.TextField(unique=True)),
                ('password', models.TextField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('lastlogin', models.DateField(blank=True, null=True)),
                ('ispwdchange', models.BooleanField(blank=True, null=True)),
                ('client_contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='account.clientcontact')),
            ],
            options={
                'db_table': 'userlogin_exp',
            },
        ),
    ]
